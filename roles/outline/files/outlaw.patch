From 78ce7aa0947e254ba60a89f1b99d50dd3e842287 Mon Sep 17 00:00:00 2001
From: Yohann Leon <yohann@leon.re>
Date: Thu, 15 Apr 2021 22:19:59 +0200
Subject: [PATCH] fix: apply outlaw patch

---
 app/scenes/Login/Notices.js |  5 +++++
 server/auth/google.js       | 14 ++++++--------
 server/errors.js            |  6 ++++++
 3 files changed, 17 insertions(+), 8 deletions(-)

diff --git a/app/scenes/Login/Notices.js b/app/scenes/Login/Notices.js
index d7be46d3..08830207 100644
--- a/app/scenes/Login/Notices.js
+++ b/app/scenes/Login/Notices.js
@@ -27,6 +27,11 @@ export default function Notices({ notice }: Props) {
           an allowed team domain.
         </NoticeAlert>
       )}
+      {notice === "denied" && (
+        <NoticeAlert>
+          You shall not pass !
+        </NoticeAlert>
+      )}
       {notice === "email-auth-required" && (
         <NoticeAlert>
           Your account uses email sign-in, please sign-in with email to
diff --git a/server/auth/google.js b/server/auth/google.js
index 8a100cf5..2e5fd20f 100644
--- a/server/auth/google.js
+++ b/server/auth/google.js
@@ -8,6 +8,7 @@ import env from "../env";
 import {
   GoogleWorkspaceRequiredError,
   GoogleWorkspaceInvalidError,
+  GoogleDenied,
 } from "../errors";
 import auth from "../middlewares/authentication";
 import passportMiddleware from "../middlewares/passport";
@@ -18,7 +19,6 @@ const router = new Router();
 const providerName = "google";
 const GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID;
 const GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;
-const allowedDomains = getAllowedDomains();
 
 const scopes = [
   "https://www.googleapis.com/auth/userinfo.profile",
@@ -44,16 +44,14 @@ if (GOOGLE_CLIENT_ID) {
       },
       async function (req, accessToken, refreshToken, profile, done) {
         try {
-          const domain = profile._json.hd;
+          const allowedEmailsEnv = process.env.GOOGLE_ALLOWED_EMAILS;
+          const allowedEmails = allowedEmailsEnv && allowedEmailsEnv.split(',');
 
-          if (!domain) {
-            throw new GoogleWorkspaceRequiredError();
-          }
-
-          if (allowedDomains.length && !allowedDomains.includes(domain)) {
-            throw new GoogleWorkspaceInvalidError();
+	  if (allowedEmails && !allowedEmails.includes(profile.email)) {
+            throw new GoogleDenied();
           }
 
+          const domain = process.env.GOOGLE_DOMAIN;
           const subdomain = domain.split(".")[0];
           const teamName = capitalize(subdomain);
 
diff --git a/server/errors.js b/server/errors.js
index 7aab2f8d..b266532f 100644
--- a/server/errors.js
+++ b/server/errors.js
@@ -94,6 +94,12 @@ export function GoogleWorkspaceInvalidError(
   return httpErrors(400, message, { id: "hd_not_allowed" });
 }
 
+export function GoogleDenied(
+  message: string = "You came to the wrong neighborhood"
+) {
+  return httpErrors(400, message, { id: "denied" });
+}
+
 export function AuthenticationProviderDisabledError(
   message: string = "Authentication method has been disabled by an admin",
   redirectUrl: string = env.URL
-- 
2.20.1


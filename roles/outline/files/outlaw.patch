From 5230640960171fa623599f95c89dd9771c43fe23 Mon Sep 17 00:00:00 2001
From: Yohann Leon <yohann@leon.re>
Date: Fri, 23 Apr 2021 11:38:23 +0200
Subject: [PATCH] fix: apply outlaw patch

---
 app/scenes/Login/Notices.js     |  5 +++++
 server/auth/providers/google.js | 16 +++++++---------
 server/errors.js                |  6 ++++++
 3 files changed, 18 insertions(+), 9 deletions(-)

diff --git a/app/scenes/Login/Notices.js b/app/scenes/Login/Notices.js
index 24ad3cd5..e7a1557d 100644
--- a/app/scenes/Login/Notices.js
+++ b/app/scenes/Login/Notices.js
@@ -28,6 +28,11 @@ export default function Notices() {
           an allowed team domain.
         </NoticeAlert>
       )}
+      {notice === "denied" && (
+        <NoticeAlert>
+          You shall not pass !
+        </NoticeAlert>
+      )}
       {notice === "email-auth-required" && (
         <NoticeAlert>
           Your account uses email sign-in, please sign-in with email to
diff --git a/server/auth/providers/google.js b/server/auth/providers/google.js
index 13b3f3a2..93c2f68e 100644
--- a/server/auth/providers/google.js
+++ b/server/auth/providers/google.js
@@ -8,6 +8,7 @@ import env from "../../env";
 import {
   GoogleWorkspaceRequiredError,
   GoogleWorkspaceInvalidError,
+  GoogleDenied,
 } from "../../errors";
 import passportMiddleware from "../../middlewares/passport";
 import { getAllowedDomains } from "../../utils/authentication";
@@ -17,7 +18,6 @@ const router = new Router();
 const providerName = "google";
 const GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID;
 const GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;
-const allowedDomains = getAllowedDomains();
 
 const scopes = [
   "https://www.googleapis.com/auth/userinfo.profile",
@@ -43,16 +43,14 @@ if (GOOGLE_CLIENT_ID) {
       },
       async function (req, accessToken, refreshToken, profile, done) {
         try {
-          const domain = profile._json.hd;
+          const allowedEmailsEnv = process.env.GOOGLE_ALLOWED_EMAILS;
+	  const allowedEmails = allowedEmailsEnv && allowedEmailsEnv.split(',');
 
-          if (!domain) {
-            throw new GoogleWorkspaceRequiredError();
+	  if (allowedEmails && !allowedEmails.includes(profile.email)) {
+            throw new GoogleDenied();
           }
-
-          if (allowedDomains.length && !allowedDomains.includes(domain)) {
-            throw new GoogleWorkspaceInvalidError();
-          }
-
+	 
+          const domain = process.env.GOOGLE_DOMAIN;
           const subdomain = domain.split(".")[0];
           const teamName = capitalize(subdomain);
 
diff --git a/server/errors.js b/server/errors.js
index 42145fe7..7ad41ef0 100644
--- a/server/errors.js
+++ b/server/errors.js
@@ -100,6 +100,12 @@ export function GoogleWorkspaceInvalidError(
   return httpErrors(400, message, { id: "hd_not_allowed" });
 }
 
+export function GoogleDenied(
+  message: string = "You shall not pass !"
+) {
+  return httpErrors(400, message, { id: "denied" });
+}
+
 export function AuthenticationProviderDisabledError(
   message: string = "Authentication method has been disabled by an admin",
   redirectUrl: string = env.URL
-- 
2.20.1

